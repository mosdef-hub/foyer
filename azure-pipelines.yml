trigger:
  branches:
    include:
    - master
  tags:
    include:
    - 0.*
pr:
  autoCancel: true
  branches:
    include:
      - master
  paths:
    exclude:
    - docs

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build for master
  branches:
    include:
    - master
  always: true

stages:
  - stage: Test
    jobs:
      - job: NoBleeding
        strategy:
          matrix:
            Python37Ubuntu:
              imageName: 'ubuntu-latest'
              python.version: 3.7
            Python38Ubuntu:
              imageName: 'ubuntu-latest'
              python.version: 3.8
            Python39Ubuntu:
              imageName: 'ubuntu-latest'
              python.version: 3.9
            Python37macOS:
              imageName: 'macOS-latest'
              python.version: 3.7
            Python38macOS:
              imageName: 'macOS-latest'
              python.version: 3.8
            Python39macOS:
              imageName: 'macOS-latest'
              python.version: 3.9
        pool:
          vmImage: $(imageName)

        steps:
          - bash: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add Conda to path

          - bash: sudo chown -R $USER $CONDA
            condition: eq( variables['Agent.OS'], 'Darwin' )
            displayName: Take ownership of conda installation

          - bash: |
              conda config --set always_yes yes --set changeps1 no
            displayName: Add relavent Channels

          - bash: |
              conda install -c conda-forge mamba
            displayName: Install mamba

          - bash: |
              sed -i -E 's/python.*$/python='$(python.version)'/' environment-dev.yml
              mamba env create -f environment-dev.yml
              source activate foyer-dev
              pip install -e .
              cd src/antefoyer
              pip install -e .
            displayName: Create Conda env, Activate, Install dependencies, Install Branch
          - bash: |
              source activate foyer-dev
              python -m pytest -v --cov=foyer --cov-report=html --color=yes --pyargs foyer --cov-config=setup.cfg
            displayName: Run Tests

          - bash: |
              source activate foyer-dev
              curl -Os https://uploader.codecov.io/latest/linux/codecov
              chmod +x codecov
              ./codecov -t ${CODECOV_UPLOAD_TOKEN} -C $(Build.SourceVersion)
            condition: and( eq( variables['Agent.OS'], 'Linux' ), eq( variables['python.version'], '3.7' ) )
            displayName: Upload coverage report to codecov.io
            env:
              CODECOV_UPLOAD_TOKEN: $(codecovUploadToken)

      - job: Windows_no_bleeding
        pool:
          vmImage: 'windows-latest'
        strategy:
          matrix:
            Python37:
              python.version: 3.7
            Python38:
              python.version: 3.8
            Python39:
              python.version: 3.9

        steps:
          - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
            displayName: Add Conda to path

          - script: |
              conda config --set always_yes yes --set changeps1 no
            displayName: Add Relevent Channels

          - script: |
              sed -i -E 's/python.*$/python='$(python.version)'/' environment-dev-win.yml
              conda env create -f environment-dev-win.yml
              call activate foyer-dev
              pip install -e .
              cd src/antefoyer
              pip install -e .
            displayName: Create conda env, Install dependencies and Install Branch

          - script: |
              call activate foyer-dev
              python -m pytest -v --cov=foyer --color=yes --pyargs foyer
            displayName: Run Tests

      - job: LinuxBleeding

        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - bash: echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add Conda to path

          - bash: |
              conda config --set always_yes yes --set changeps1 no
              conda install -c conda-forge mamba
              git clone https://github.com/mosdef-hub/mbuild.git
              git clone https://github.com.mosdef-hub/gmso.git
              mamba env create --name bleeding --file environment-dev.yml
              source activate bleeding
              mamba env update --name bleeding --file mbuild/environment.yml
              pip install -e mbuild
              mamba env update --name bleeding --file gmso/environment.yml
              pip install -e gmso
              pip install -e .
              pip install -e src/antefoyer
            displayName: Create a new bleeding test environment

          - bash: |
              source activate bleeding
              python -m pytest -v --cov=foyer --cov-report=html --color=yes --pyargs foyer
            displayName: Run Tests


  - stage: Docker
    dependsOn: Test
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'Schedule'))
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: publishDocker
        steps:
          - task: Docker@2
            displayName: Login to docker hub
            inputs:
              command: login
              containerRegistry: mosdefDockerLogin

          - task: Docker@2
            displayName: Build and Push
            inputs:
              command: buildAndPush
              repository: mosdef/foyer
              tags: latest

          - task: Docker@2
            displayName: Logout
            inputs:
              command: logout
              containerRegistry: mosdefDockerLogin
